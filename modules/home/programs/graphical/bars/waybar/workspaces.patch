diff --git a/include/modules/hyprland/workspaces.hpp b/include/modules/hyprland/workspaces.hpp
index 76b3462d..ec1fb6a4 100644
--- a/include/modules/hyprland/workspaces.hpp
+++ b/include/modules/hyprland/workspaces.hpp
@@ -59,6 +59,7 @@ class Workspaces : public AModule, public EventHandler {
   bool isWorkspaceIgnored(std::string const& workspace_name);

   bool windowRewriteConfigUsesTitle() const { return m_anyWindowRewriteRuleUsesTitle; }
+  bool hasWindowRewriteConfig() const { return m_hasWindowRewriteConfig; }
   const IconLoader& iconLoader() const { return m_iconLoader; }

  private:
@@ -163,6 +164,7 @@ class Workspaces : public AModule, public EventHandler {
   std::map<std::string, std::string> m_iconsMap;
   util::RegexCollection m_windowRewriteRules;
   bool m_anyWindowRewriteRuleUsesTitle = false;
+  bool m_hasWindowRewriteConfig = false;
   std::string m_formatWindowSeparator;

   bool m_withIcon;
diff --git a/src/modules/hyprland/workspace.cpp b/src/modules/hyprland/workspace.cpp
index 2c8a7b09..94676d5d 100644
--- a/src/modules/hyprland/workspace.cpp
+++ b/src/modules/hyprland/workspace.cpp
@@ -113,7 +113,8 @@ void Workspace::insertWindow(WindowCreationPayload create_window_payload) {
   if (!create_window_payload.isEmpty(m_workspaceManager)) {
     auto repr = create_window_payload.repr(m_workspaceManager);

-    if (!repr.empty() || m_workspaceManager.enableTaskbar()) {
+    if ((!repr.repr_rewrite.empty() || !m_workspaceManager.hasWindowRewriteConfig()) ||
+        m_workspaceManager.enableTaskbar()) {
       auto addr = create_window_payload.getAddress();
       auto it = std::ranges::find_if(
           m_windowMap, [&addr](const auto &window) { return window.address == addr; });
diff --git a/src/modules/hyprland/workspaces.cpp b/src/modules/hyprland/workspaces.cpp
index 5d2903dc..2aafae74 100644
--- a/src/modules/hyprland/workspaces.cpp
+++ b/src/modules/hyprland/workspaces.cpp
@@ -707,9 +707,12 @@ auto Workspaces::populateWindowRewriteConfig(const Json::Value &config) -> void
   const auto &windowRewrite = config["window-rewrite"];
   if (!windowRewrite.isObject()) {
     spdlog::debug("window-rewrite is not defined or is not an object, using default rules.");
+    m_hasWindowRewriteConfig = false;
     return;
   }

+  m_hasWindowRewriteConfig = true;
+
   const auto &windowRewriteDefaultConfig = config["window-rewrite-default"];
   std::string windowRewriteDefault =
       windowRewriteDefaultConfig.isString() ? windowRewriteDefaultConfig.asString() : "?";
